// Code generated by mockery v2.43.2. DO NOT EDIT.

package interfaces_mocks

import mock "github.com/stretchr/testify/mock"

// MockJwtTokenInterface is an autogenerated mock type for the JwtTokenInterface type
type MockJwtTokenInterface struct {
	mock.Mock
}

type MockJwtTokenInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockJwtTokenInterface) EXPECT() *MockJwtTokenInterface_Expecter {
	return &MockJwtTokenInterface_Expecter{mock: &_m.Mock}
}

// SignedString provides a mock function with given fields: key
func (_m *MockJwtTokenInterface) SignedString(key interface{}) (string, error) {
	ret := _m.Called(key)

	if len(ret) == 0 {
		panic("no return value specified for SignedString")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(interface{}) (string, error)); ok {
		return rf(key)
	}
	if rf, ok := ret.Get(0).(func(interface{}) string); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(interface{}) error); ok {
		r1 = rf(key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockJwtTokenInterface_SignedString_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SignedString'
type MockJwtTokenInterface_SignedString_Call struct {
	*mock.Call
}

// SignedString is a helper method to define mock.On call
//   - key interface{}
func (_e *MockJwtTokenInterface_Expecter) SignedString(key interface{}) *MockJwtTokenInterface_SignedString_Call {
	return &MockJwtTokenInterface_SignedString_Call{Call: _e.mock.On("SignedString", key)}
}

func (_c *MockJwtTokenInterface_SignedString_Call) Run(run func(key interface{})) *MockJwtTokenInterface_SignedString_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(interface{}))
	})
	return _c
}

func (_c *MockJwtTokenInterface_SignedString_Call) Return(_a0 string, _a1 error) *MockJwtTokenInterface_SignedString_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockJwtTokenInterface_SignedString_Call) RunAndReturn(run func(interface{}) (string, error)) *MockJwtTokenInterface_SignedString_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockJwtTokenInterface creates a new instance of MockJwtTokenInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockJwtTokenInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockJwtTokenInterface {
	mock := &MockJwtTokenInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
